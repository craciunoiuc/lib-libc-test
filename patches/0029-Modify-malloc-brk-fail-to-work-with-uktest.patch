From a05a9c4df6de009b82f1214b8c808e8dfea35f58 Mon Sep 17 00:00:00 2001
From: Cezar Craciunoiu <cezar.craciunoiu@gmail.com>
Date: Tue, 7 May 2024 16:49:15 +0300
Subject: [PATCH] Modify malloc-brk-fail to work with uktest

Signed-off-by: Cezar Craciunoiu <cezar.craciunoiu@gmail.com>
---
 src/regression/malloc-brk-fail.c | 21 +++++++--------------
 1 file changed, 7 insertions(+), 14 deletions(-)

diff --git a/src/regression/malloc-brk-fail.c b/src/regression/malloc-brk-fail.c
index 420b000..d4b5d48 100644
--- a/src/regression/malloc-brk-fail.c
+++ b/src/regression/malloc-brk-fail.c
@@ -5,11 +5,11 @@
 #include <string.h>
 #include <sys/mman.h>
 #include <sys/resource.h>
-#include "test.h"
+#include <uk/test.h>
 
-#define T(f) ((f)==0 || (t_error(#f " failed: %s\n", strerror(errno)), 0))
+#define T(f) UK_TEST_EXPECT_ZERO((f))
 
-int main(void)
+UK_TESTCASE(uk_libc_malloc_tests, malloc_brk_fail_tests)
 {
 	void *p;
 	void *q;
@@ -17,26 +17,19 @@ int main(void)
 	int r;
 
 	// fill memory, largest mmaped area is [p,p+n)
-	if (t_vmfill(&p, &n, 1) < 1 || n < 2*65536) {
-		t_error("vmfill failed\n");
+	if (t_vmfill(&p, &n, 1) < 1 || n < 2*65536)
 		return 1;
-	}
 
 	// malloc should fail here
 	errno = 0;
 	q = malloc(10000);
-	if (q)
-		t_error("malloc(10000) succeeded after memory is filled\n");
-	else if (errno != ENOMEM)
-		t_error("malloc did not fail with ENOMEM, got %s\n", strerror(errno));
+	UK_TEST_EXPECT_NULL(q);
+	UK_TEST_ASSERT(errno == ENOMEM);
 
 	// make space available for mmap, but ensure it's not contiguous with brk
 	T(munmap((char*)p+65536, n-65536));
 
 	// malloc should succeed now
 	q = malloc(10000);
-	if (!q)
-		t_error("malloc(10000) failed (eventhough 64k is available to mmap): %s\n", strerror(errno));
-
-	return t_status;
+	UK_TEST_EXPECT_NOT_NULL(q);
 }
-- 
2.43.0

